# docker compose file for running a 3-node PostgreSQL cluster
# with 3-node etcd cluster as the DCS and one haproxy node
version: "3.3"

networks:
    patroni_network:

volumes:
    db_data1:
    db_data2:
    db_data3:

services:
    etcd1: &etcd
        image: patroni
        networks: [ patroni_network ]
        environment:
            ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
            ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
            ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
            ETCD_INITIAL_CLUSTER_STATE: new
            ETCD_INITIAL_CLUSTER_TOKEN: patroni_cluster
        container_name: patroni-etcd1
        hostname: etcd1
        command: etcd -name etcd1 -initial-advertise-peer-urls http://etcd1:2380

    etcd2:
        <<: *etcd
        container_name: patroni-etcd2
        hostname: etcd2
        command: etcd -name etcd2 -initial-advertise-peer-urls http://etcd2:2380

    etcd3:
        <<: *etcd
        container_name: patroni-etcd3
        hostname: etcd3
        command: etcd -name etcd3 -initial-advertise-peer-urls http://etcd3:2380

    haproxy:
        image: patroni
        networks: [ patroni_network ]
        env_file: docker/patroni.env
        hostname: haproxy
        container_name: patroni-haproxy
        ports:
            - "5000:5000"
            - "5001:5001"
        command: haproxy
        environment: &haproxy_envs
            ETCDCTL_ENDPOINTS: http://etcd1:2379,http://etcd2:2379,http://etcd3:2379
            PATRONI_ETCD3_HOSTS: "'etcd1:2379','etcd2:2379','etcd3:2379'"
            PATRONI_SCOPE: patroni_network

    patroni1:
        image: patroni
        networks: [ patroni_network ]
        env_file: docker/patroni.env
        hostname: patroni1
        container_name: patroni-pgsql1
        volumes:
          - "db_data1:/home/postgres/data"
        deploy: &deploy_policies
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3
                window: 60s
        environment:
            <<: *haproxy_envs
            PATRONI_NAME: patroni1

    patroni2:
        image: patroni
        networks: [ patroni_network ]
        env_file: docker/patroni.env
        hostname: patroni2
        container_name: patroni-pgsql2
        volumes:
          - "db_data2:/home/postgres/data"
        deploy:
            <<: *deploy_policies
        environment:
            <<: *haproxy_envs
            PATRONI_NAME: patroni2

    patroni3:
        image: patroni
        networks: [ patroni_network ]
        env_file: docker/patroni.env
        hostname: patroni3
        container_name: patroni-pgsql3
        volumes:
          - "db_data3:/home/postgres/data"
        deploy:
            <<: *deploy_policies
        environment:
            <<: *haproxy_envs
            PATRONI_NAME: patroni3
